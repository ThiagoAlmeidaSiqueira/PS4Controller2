{"entries":[{"timestamp":1737248965987,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables><variable id=\"J,ABR!i+Fz9oHY8/n;H+\">DATA</variable><variable id=\"u!Q.5Od8U)*G@ewr/21H\">KEY</variable><variable id=\"R4OZfL+fm%Y0BNs+z}cq\">VALUE</variable><variable id=\"BRoAa34=),glrR_H4VkW\">lista</variable></variables><block type=\"pxt-on-start\" x=\"51\" y=\"53\"><statement name=\"HANDLER\"><block type=\"serial_redirect\"><field name=\"tx\">SerialPin.P0</field><field name=\"rx\">SerialPin.P1</field><field name=\"rate\">BaudRate.BaudRate115200</field></block></statement></block><block type=\"serial_on_data_received\" x=\"499\" y=\"80\"><value name=\"delimiters\"><shadow type=\"serial_delimiter_conv\"><field name=\"del\">Delimiters.NewLine</field></shadow></value><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"J,ABR!i+Fz9oHY8/n;H+\">DATA</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"serial_read_until\"><value name=\"delimiter\"><shadow type=\"serial_delimiter_conv\"><field name=\"del\">Delimiters.NewLine</field></shadow></value></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"u!Q.5Od8U)*G@ewr/21H\">KEY</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"lists_index_get\"><value name=\"LIST\"><block type=\"string_split\"><value name=\"this\"><shadow type=\"text\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"TEXT\">this</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"J,ABR!i+Fz9oHY8/n;H+\">DATA</field></block></value><value name=\"separator\"><shadow type=\"text\"><field name=\"TEXT\">@</field></shadow></value></block></value><value name=\"INDEX\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"R4OZfL+fm%Y0BNs+z}cq\">VALUE</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"lists_index_get\"><value name=\"LIST\"><block type=\"string_split\"><value name=\"this\"><shadow type=\"text\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"TEXT\">this</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"J,ABR!i+Fz9oHY8/n;H+\">DATA</field></block></value><value name=\"separator\"><shadow type=\"text\"><field name=\"TEXT\">@</field></shadow></value></block></value><value name=\"INDEX\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></value></block></next></block></next></block></statement></block>"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n"],[0,"</xm"]],"start1":12,"start2":12,"length1":2475,"length2":113}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"serial.onDataReceived(serial.delimiters(Delimiters.NewLine), function on_data_received() {\n    \n    DATA = serial.readUntil(serial.delimiters(Delimiters.NewLine))\n    KEY = _py.py_string_split(DATA, \"@\")[0]\n    VALUE = _py.py_string_split(DATA, \"@\")[1]\n})\nlet VALUE = \"\"\nlet KEY = \"\"\nlet DATA = \"\"\nserial.redirect(SerialPin.P0, SerialPin.P1, BaudRate.BaudRate115200)"],[0,"\n"]],"start1":0,"start2":0,"length1":367,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":216,"start2":216,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"def on_data_received():\n    global DATA, KEY, VALUE\n    DATA = serial.read_until(serial.delimiters(Delimiters.NEW_LINE))\n    KEY = DATA.split(\"@\")[0]\n    VALUE = DATA.split(\"@\")[1]\n\n\nserial.on_data_received(serial.delimiters(Delimiters.NEW_LINE), on_data_received)\n\nVALUE = \"\"\nKEY = \"\"\nDATA = \"\"\nserial.redirect(SerialPin.P0, SerialPin.P1, BaudRate.BAUD_RATE115200)"}]},{"timestamp":1737249284388,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"namespace PS4Controller {\n    enum button_enum {\n        BOTAO_X,\n        BOTAO_CIRCULO,\n        BOTAO_TRIANGULO,\n        BOTAO_QUADRADO,\n        L1,\n        R1\n    };\n    enum axis_enum {\n        JOY_ESQ_X,\n        JOY_ESQ_Y,\n        JOY_DIR_X,\n        JOY_DIR_Y,\n        L2,\n        R2\n    };\n\n    const serialDelimiter = \"\\n\";\n\n    let buttonHandlers: { [key: string]: () => void } = {};\n    let analogHandlers: { [key: string]: (value: number) => void } = {};\n    let connectionHandlers: { [key: string]: () => void } = {};\n\n    // Processa os dados recebidos\n    function processIncomingData(data: string): void {\n        let parts = data.split(\"@\");\n        if (parts.length == 2) {\n            let key = parts[0];\n            let value = parseInt(parts[1]);\n\n            // Evento de bot찾o pressionado\n            if (value === 1 && buttonHandlers[key]) {\n                buttonHandlers[key]();\n            }\n\n            // Evento de leitura anal처gica\n            if (!isNaN(value) && analogHandlers[key]) {\n                analogHandlers[key](value);\n            }\n\n            // Eventos de conex찾o/desconex찾o\n            if (key === \"CONECTADO\" && connectionHandlers[\"connected\"]) {\n                connectionHandlers[\"connected\"]();\n            }\n            if (key === \"DESCONECTADO\" && connectionHandlers[\"disconnected\"]) {\n                connectionHandlers[\"disconnected\"]();\n            }\n        }\n    }\n    "],[0,"seri"]],"start1":0,"start2":0,"length1":1431,"length2":4},{"diffs":[[0,"    "],[-1,"    let receivedData"],[1,"\n    DATA"],[0," = s"]],"start1":91,"start2":91,"length1":28,"length2":17},{"diffs":[[0,"e))\n"],[-1,"        processIncomingData(receivedData);\n    "],[0,"    "]],"start1":159,"start2":159,"length1":55,"length2":8},{"diffs":[[0,"\"@\")[0]\n"],[-1,"    "],[0,"    VALU"]],"start1":199,"start2":199,"length1":20,"length2":16},{"diffs":[[0,"[1]\n"],[-1,"    })\n    "],[1,"})\n"],[0,"let "]],"start1":249,"start2":249,"length1":19,"length2":11},{"diffs":[[0," VALUE = \"\"\n"],[-1,"    "],[0,"let KEY = \"\""]],"start1":259,"start2":259,"length1":28,"length2":24},{"diffs":[[0,"EY = \"\"\n"],[-1,"    "],[0,"let DATA"]],"start1":276,"start2":276,"length1":20,"length2":16},{"diffs":[[0," \"\"\n"],[-1,"\n    \n\n}"],[1,"serial.redirect(SerialPin.P0, SerialPin.P1, BaudRate.BaudRate115200)"],[0,"\n"]],"start1":294,"start2":294,"length1":13,"length2":73}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"les\": [\n"],[1,"        \"main.blocks\",\n"],[0,"        "]],"start1":151,"start2":151,"length1":16,"length2":39},{"diffs":[[0,"ADME.md\""],[1,",\n        \"main.py\""],[0,"\n    ],\n"]],"start1":212,"start2":212,"length1":16,"length2":35},{"diffs":[[0,"itor\": \""],[-1,"ts"],[1,"py"],[0,"prj\"\n}\n"]],"start1":263,"start2":263,"length1":17,"length2":17}]},{"type":"removed","filename":"main.blocks","value":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"J,ABR!i+Fz9oHY8/n;H+\">DATA</variable><variable id=\"u!Q.5Od8U)*G@ewr/21H\">KEY</variable><variable id=\"R4OZfL+fm%Y0BNs+z}cq\">VALUE</variable><variable id=\"BRoAa34=),glrR_H4VkW\">lista</variable></variables><block type=\"pxt-on-start\" x=\"51\" y=\"53\"><statement name=\"HANDLER\"><block type=\"serial_redirect\"><field name=\"tx\">SerialPin.P0</field><field name=\"rx\">SerialPin.P1</field><field name=\"rate\">BaudRate.BaudRate115200</field></block></statement></block><block type=\"serial_on_data_received\" x=\"499\" y=\"80\"><value name=\"delimiters\"><shadow type=\"serial_delimiter_conv\"><field name=\"del\">Delimiters.NewLine</field></shadow></value><statement name=\"HANDLER\"><block type=\"variables_set\"><field name=\"VAR\" id=\"J,ABR!i+Fz9oHY8/n;H+\">DATA</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"serial_read_until\"><value name=\"delimiter\"><shadow type=\"serial_delimiter_conv\"><field name=\"del\">Delimiters.NewLine</field></shadow></value></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"u!Q.5Od8U)*G@ewr/21H\">KEY</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"lists_index_get\"><value name=\"LIST\"><block type=\"string_split\"><value name=\"this\"><shadow type=\"text\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"TEXT\">this</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"J,ABR!i+Fz9oHY8/n;H+\">DATA</field></block></value><value name=\"separator\"><shadow type=\"text\"><field name=\"TEXT\">@</field></shadow></value></block></value><value name=\"INDEX\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><next><block type=\"variables_set\"><field name=\"VAR\" id=\"R4OZfL+fm%Y0BNs+z}cq\">VALUE</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"lists_index_get\"><value name=\"LIST\"><block type=\"string_split\"><value name=\"this\"><shadow type=\"text\" disabled-reasons=\"MANUALLY_DISABLED\"><field name=\"TEXT\">this</field></shadow><block type=\"variables_get\"><field name=\"VAR\" id=\"J,ABR!i+Fz9oHY8/n;H+\">DATA</field></block></value><value name=\"separator\"><shadow type=\"text\"><field name=\"TEXT\">@</field></shadow></value></block></value><value name=\"INDEX\"><shadow type=\"math_number\"><field name=\"NUM\">1</field></shadow></value></block></value></block></next></block></next></block></statement></block></xml>"},{"type":"removed","filename":"main.py","value":"def on_data_received():\n    global DATA, KEY, VALUE\n    DATA = serial.read_until(serial.delimiters(Delimiters.NEW_LINE))\n    KEY = DATA.split(\"@\")[0]\n    VALUE = DATA.split(\"@\")[1]\n\n\nserial.on_data_received(serial.delimiters(Delimiters.NEW_LINE), on_data_received)\n\nVALUE = \"\"\nKEY = \"\"\nDATA = \"\"\nserial.redirect(SerialPin.P0, SerialPin.P1, BaudRate.BAUD_RATE115200)"}]},{"timestamp":1737249884127,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    "],[-1,"/**\n     * Registra um evento para quando o bot찾o for pressionado.\n     * @param handler A fun챌찾o a ser executada.\n     */\n    //% block=\"quando bot찾o $button for pressionado\"\n    //% button.defl=button_enum.BOTAO_X\n    export function onButtonPressed(button: button_enum, handler: () => void): void {\n        buttonHandlers[button] = handler;\n    }\n\n    /**\n     * Registra um evento para leitura de valor anal처gico.\n     * @param handler A fun챌찾o que recebe o valor.\n     */\n    //% block=\"quando valor anal처gico $axis mudar\"\n    //% axis.defl=axis_enum.JOY_ESQ_X\n    export function onAnalogValueReceived(axis: axis_enum, handler: (value: number) => void): void {\n        analogHandlers[axis] = handler;\n    }\n\n    /**\n     * Registra um evento para quando o controle se conectar.\n     */\n    //% block=\"quando controle for conectado\"\n    export function onConnected(handler: () => void): void {\n        connectionHandlers[\"connected\"] = handler;\n    }\n\n    /**\n     * Registra um evento para quando o controle se desconectar.\n     */\n    //% block=\"quando controle for desconectado\"\n    export function onDisconnected(handler: () => void): void {\n        connectionHandlers[\"disconnected\"] = handler;\n    }"],[0,"\n\n}\n"]],"start1":1804,"start2":1804,"length1":1218,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":201,"start2":201,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// testes v찾o aqui; isto n찾o ser찼 compilado quando este pacote for usado como uma extens찾o.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1737248965986,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"teste\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1737250222993}